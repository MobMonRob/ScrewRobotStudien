#!/usr/bin/env python
PACKAGE = "screwer_node"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

pt_group = gen.add_group("PassThrough", type="tab")

pt_group.add("pt_x", bool_t, 0, "PT X", True)
pt_group.add("pt_y", bool_t, 0, "PT Y", False)
pt_group.add("pt_z", bool_t, 0, "PT Z", True)
pt_group.add("pt_min_x", double_t, 0, "Min X", -0.2, -10, 10)
pt_group.add("pt_max_x", double_t, 0, "Max X", 0.2, -10, 10)
pt_group.add("pt_min_y", double_t, 0, "Min Y", 0, -10, 10)
pt_group.add("pt_max_y", double_t, 0, "Max Y", 0, -10, 10)
pt_group.add("pt_min_z", double_t, 0, "Min Z", -0.4, -10, 10)
pt_group.add("pt_max_z", double_t, 0, "Max Z", 0.4, -10, 10)

sacs_group = gen.add_group("SacSegmentation", type="tab")
sacs_group.add("sacs_distance_threshold", double_t, 0, "Distance Threshold", 0.01, 0, 1)
sacs_model_enum = gen.enum([gen.const("PLANE", int_t, 0, "Plane Model")], "An enum to set model.")
sacs_group.add("sacs_model", int_t, 0, "Plane Model", 0, 0, 0, edit_method=sacs_model_enum)
sacs_method_enum = gen.enum([gen.const("RANSAC", int_t, 0, "Ransac Method")], "An enum to set method.")
sacs_group.add("sacs_method", int_t, 0, "Ransac Method", 0, 0, 0, edit_method=sacs_method_enum)

ece_group = gen.add_group("EuclideanClusterExtraction", type="tab")
ece_group.add("ece_tolerance", double_t, 0, "Tolerance", 0.02, 0, 1)
ece_group.add("ece_min_size", double_t, 0, "Tolerance", 200, 0, 100000)
ece_group.add("ece_max_size", double_t, 0, "Tolerance", 5000, 0, 100000)

vfhe_group = gen.add_group("VfhEstimation", type="tab")
vfhe_group.add("vfhe_normal_radius_search", double_t, 0, "Normal Radius Search", 0.05, 0, 1)

svmc_group = gen.add_group("SvmClassification", type="tab")
svmc_group.add("svmc_path_to_model", str_t, 0, "Path to SVM Model", "/home/lstern/dhbw-screwing-robot/intelrealsense_d435/data/0_grad/recording_1/svm_model.txt")
svmc_group.add("svmc_training", bool_t, 0, "Training", True)

exit(gen.generate(PACKAGE, "screwer_node", "Screwer"))
